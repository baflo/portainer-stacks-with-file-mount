version: '3.1'

volumes:
  pgdata:

networks:
  default:
  signal-cli-rest-api_default:
     external: true

services:

  postgres:
    image: postgres:11
    restart: always
    networks:
      - default
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD

    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh

  redis:
    image: redis
    restart: always
    networks:
      - default

  n8n:
    image: n8nio/n8n:latest
    restart: always
    networks:
      - default
      - signal-cli-rest-api_default
    #env_file:
    #  - .env
    environment:
      - N8N_ENCRYPTION_KEY
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER
      - N8N_BASIC_AUTH_PASSWORD

      - DOMAIN_NAME
      - SUBDOMAIN
      - WEBHOOK_URL

      - VIRTUAL_HOST
      - VIRTUAL_PORT

      - GENERIC_TIMEZONE=Europe/Berlin
      - EXECUTIONS_DATA_PRUNE=true
      - N8N_LOG_LEVEL=debug
      - N8N_LOG_OUTPUT=console

      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    links:
      - postgres
      - redis
    # Wait 5 seconds to start n8n to make sure that PostgreSQL is ready
    # when n8n tries to connect to it
    command: /bin/sh -c "sleep 5; n8n start"
